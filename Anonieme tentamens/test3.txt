\Project 	 ---Begin---------------------
Compiler Errors:
(116,18): error CS1061: 'List<QuestionAndTest.Halte>' does not contain a definition for 'Aggregate' and no extension method 'Aggregate' accepting a first argument of type 'List<QuestionAndTest.Halte>' could be found (are you missing a using directive or an assembly reference?)
##################

\Project,CompileError,
public class Bus 
    {
        public int BusNr { get; }
        public int AantalPassagiers { get; private set; }
        public Lijn RijdOpLijn { get; }
        public DateTime Vertrektijd { get; }
        private string _voornaam;
        private string _achternaam;

        public string BestuurderNaam
        {
            get { return $"{_voornaam} {_achternaam}"; }
        }

        public Bus(int busNr, Lijn rijdOpLijn, DateTime vertrektijd, string voornaam, string achternaam)
        {
            if (rijdOpLijn == null) throw new ArgumentNullException(nameof(rijdOpLijn));
            if (voornaam == null) throw new ArgumentNullException(nameof(voornaam));
            if (achternaam == null) throw new ArgumentNullException(nameof(achternaam));

            BusNr = busNr;
            RijdOpLijn = rijdOpLijn;
            Vertrektijd = vertrektijd;
            AantalPassagiers = 0;
            _voornaam = voornaam;
            _achternaam = achternaam;
        }

        public void StapIn()
        {
            AantalPassagiers++;
        }

        public void StapUit()
        {
            AantalPassagiers--;
        }
    }
public class Lijn
    {
        //twee varianten!
        public int LijnNr { get; }

        private List<Halte> _haltes;

        public List<Halte> Haltes 
        {
            get { return _haltes; }
        } 

        public Lijn(int lijnNr)
        {
            LijnNr = lijnNr;
            _haltes = new List<Halte>();
        }

        public void AddHalte(Halte halte)
        {
            if (halte == null) throw new ArgumentNullException(nameof(halte));

            _haltes.Add(halte);
        }

        //Vraag 2
        public TimeSpan Reistijd()
        {
            return _haltes
                .Aggregate(TimeSpan.Zero,
                    (current, halte) => current + halte.Reisduur);

            TimeSpan t = TimeSpan.Zero;
            foreach (var halte in _haltes)
            {
                t += halte.Reisduur;
            }
            return t;
        }
    }
public class Halte
    {
        public string Naam { get; }

        public Halte(string naam, TimeSpan reisduur = default(TimeSpan))
        {
            Naam = naam;
            Reisduur = reisduur;
        }

        public TimeSpan Reisduur { get; set; }
    }
NakijkTool.TestRapport 	 ---End---------------------

